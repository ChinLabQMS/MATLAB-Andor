classdef SequenceRegistry < BaseObject

    properties (Dependent, Hidden)
        SequenceList
    end

    properties (Constant)
        Empty = table( ...
            (1:10)', ...
            categorical({'--inactive--', '--inactive--', '--inactive--', '--inactive--', '--inactive--', '--inactive--', '--inactive--', '--inactive--', '--inactive--', '--inactive--'}, ...
            {'Andor19330', 'Andor19331', 'Zelux', '--inactive--'}, 'Ordinal', true)', ...
            ["", "", "", "", "", "", "", "", "", ""]', ...
            categorical({'Analysis', 'Analysis', 'Analysis', 'Analysis', 'Analysis', 'Analysis', 'Analysis', 'Analysis', 'Analysis', 'Analysis'}, ...
            {'Start+Acquire', 'Start', 'Acquire', 'Analysis'}, 'Ordinal', true)', ...
            ["", "", "", "", "", "", "", "", "", ""]', ...
            'VariableNames', {'Order', 'Camera', 'Label', 'Type', 'Note'})
        ZeluxBasic = table( ...
            (1:6)', ...
            categorical({'Zelux', 'Zelux', 'Zelux', 'Zelux', '--inactive--', '--inactive--'}, ...
            {'Andor19330', 'Andor19331', 'Zelux', '--inactive--'}, 'Ordinal', true)', ...
            ["Lattice", "DMD", "Lattice", "DMD", "", ""]', ...
             categorical({'Start+Acquire', 'Start+Acquire', 'Analysis', 'Analysis', 'Analysis', 'Analysis'}, ...
            {'Start+Acquire', 'Start', 'Acquire', 'Analysis'}, 'Ordinal', true)', ...
            ["", "", "", "", "", ""]', ...
            'VariableNames', {'Order', 'Camera', 'Label', 'Type', 'Note'})
        AndorBasic = table( ...
            (1:8)', ...
            categorical({'Andor19330', 'Andor19331', 'Andor19330', 'Andor19331', 'Andor19330', 'Andor19331', '--inactive--', '--inactive--'}, ...
            {'Andor19330', 'Andor19331', 'Zelux', '--inactive--'}, 'Ordinal', true)', ...
            ["Image", "Image", "Image", "Image", "Image", "Image", "", ""]', ...
             categorical({'Start', 'Start', 'Acquire', 'Acquire', 'Analysis', 'Analysis', 'Analysis', 'Analysis'}, ...
            {'Start+Acquire', 'Start', 'Acquire', 'Analysis'}, 'Ordinal', true)', ...
            ["", "", "", "", "", "", "", ""]', ...
            'VariableNames', {'Order', 'Camera', 'Label', 'Type', 'Note'})
        Full4Basic = table( ...
            (1:12)', ...
            categorical({'Zelux', 'Zelux', 'Zelux', 'Zelux', 'Andor19330', 'Andor19331', 'Andor19330', 'Andor19331', 'Andor19330', 'Andor19331', '--inactive--', '--inactive--'}, ...
            {'Andor19330', 'Andor19331', 'Zelux', '--inactive--'}, 'Ordinal', true)', ...
            ["Lattice", "DMD", "Lattice", "DMD", "Image", "Image", "Image", "Image", "Image", "Image", "", ""]', ...
            categorical({'Start+Acquire', 'Start+Acquire', 'Analysis', 'Analysis', 'Start', 'Start', 'Acquire', 'Acquire', 'Analysis', 'Analysis', 'Analysis', 'Analysis'}, ...
            {'Start+Acquire', 'Start', 'Acquire', 'Analysis'}, 'Ordinal', true)', ...
            ["", "", "", "", "", "", "", "", "FitCenter", "FitCenter", "", ""]', ...
            'VariableNames', {'Order', 'Camera', 'Label', 'Type', 'Note'})
        Full4Analysis = table( ...
            (1:12)', ...
            categorical({'Zelux', 'Zelux',  'Zelux', 'Zelux', 'Andor19330', 'Andor19331', 'Andor19330', 'Andor19331', 'Andor19330', 'Andor19331', '--inactive--', '--inactive--'}, ...
            {'Andor19330', 'Andor19331', 'Zelux', '--inactive--'}, 'Ordinal', true)', ...
            ["Lattice", "DMD", "Lattice", "DMD", "Image", "Image", "Image", "Image", "Image", "Image", "", ""]', ...
            categorical({'Start+Acquire', 'Start+Acquire', 'Analysis', 'Analysis', 'Start', 'Start', 'Acquire', 'Acquire', 'Analysis', 'Analysis', 'Analysis', 'Analysis'}, ...
            {'Start+Acquire', 'Start', 'Acquire', 'Analysis'}, 'Ordinal', true)', ...
            ["", "", "CalibLatR", "FitCenter", "", "", "", "", "FitCenter, CalibLatR", "FitCenter, CalibLatR", "", ""]', ...
            'VariableNames', {'Order', 'Camera', 'Label', 'Type', 'Note'})
    end

    methods
        function list = get.SequenceList(obj)
            list = obj.getPropList();
        end
    end

end
