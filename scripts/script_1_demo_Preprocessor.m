%% Introduction
% Goal: Demonstrate an example use of Preprocessor to get signal images
% from raw images and generate the leakage file for fast mode preprocessing
% Internally the Preprocessor does the following:
% 1. Subtract a pre-recorded background that are taken with the same
%    acquisition settings
% 2. Remove outliers
% 3. Use a fitted linear plane to remove residual offset accumulated during
%    readout

%% Create a Preprocessor object
% Configurable settings:
% - BackgroundFilePath: path to the calibration file generated by script_0

% Alternative to configure those settings upon object initiation, go to 
% "/core/preprocess/Preprocessor" and edit the default settings

clear; clc; close all
p = Preprocessor();
disp(p)

%% Load a dataset from file and plot raw images
Data = load("data/2025/04 April/20250411/dense_no_green.mat").Data;

idx = 1;
% cam = "Andor19330";
cam = "Andor19331";
% cam = "Zelux";
label = "Image";
% label = "Pattern_532";

figure
subplot(1, 2, 1)
imagesc2(mean(Data.(cam).(label), 3))
title(sprintf('[%s] Averaged image', cam))

subplot(1, 2, 2)
imagesc2(Data.(cam).(label)(:, :, idx))
title(sprintf('[%s] Index: %d', cam, idx))

%% Preprocess the data
Signal = p.process(Data, 'fast_mode', false);

%% Plot a processed single-shot and an averaged image

idx = 1;
% cam = "Andor19330";
cam = "Andor19331";
% cam = "Zelux";
label = "Image";
% label = "Pattern_532";

figure
subplot(1, 2, 1)
imagesc2(mean(Signal.(cam).(label), 3))
title(sprintf('[%s] Averaged image', cam))

subplot(1, 2, 2)
imagesc2(Signal.(cam).(label)(:, :, idx))
title(sprintf('[%s] Index: %d', cam, idx))

%%
